name: Moyiza server CI/CD

on:
  push:
    branches: [ develop ]
#  pull_request:
#    branches: [ develop ]

#버킷 이름, CodeDeploy App Name, CodeDeploy 배포 그룹 이름
env:
  S3_BUCKET_NAME: hohomi
  CODE_DEPLOY_APPLICATION_NAME: hohomi
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: hohomi-group

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      # gradle caching - 빌드 시간 향상
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Start WebSocket Server
        run: |
          ./gradlew bootRun --args='--spring.config.location=classpath:application.yml'  

      # 디렉토리 생성
      - name: Make Directory
        run: mkdir -p deploy

      # Jar 파일 복사
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy

      # appspec.yml 파일 복사
      - name: Copy appspec.yml
        run: cp appspec.yml ./deploy

      # script files 복사
      - name: Copy script
        run: cp ./scripts/*.sh ./deploy

      # 빌드한 프로젝트를 zip파일로 압축
      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip ./deploy
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # S3에 zip 파일 업로드
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/deploy/$GITHUB_SHA.zip --source .

      # S3에 업로드한 파일을 CodeDeploy에 배포 요청!!
      - name: Code Deploy
        run: aws deploy create-deployment --application-name $CODE_DEPLOY_APPLICATION_NAME
          --deployment-config-name CodeDeployDefault.AllAtOnce --file-exists-behavior OVERWRITE
          --deployment-group-name $CODE_DEPLOY_DEPLOYMENT_GROUP_NAME
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=deploy/$GITHUB_SHA.zip
          --region ${{ secrets.AWS_REGION }}