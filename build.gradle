plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'junit:junit:4.13.1'

    //JWT
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'

//    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    runtimeOnly 'com.h2database:h2'
    //Jasypt
    implementation 'org.jasypt:jasypt:1.9.3'

    // ASW S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    implementation "com.amazonaws:aws-java-sdk-s3:1.12.281"

    //Jasypt
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    //spring email
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    //Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //WEBSOCKET
    implementation 'org.webjars:webjars-locator-core'
    implementation 'org.webjars:sockjs-client:1.0.2'
    implementation 'org.webjars:stomp-websocket:2.3.3'
    implementation 'org.webjars:bootstrap:3.4.0'
    implementation 'org.webjars:jquery:3.6.2'

    //QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //coolSMS
    implementation 'net.nurigo:sdk:4.3.0'
    //Spring Batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    testImplementation("org.springframework.batch:spring-batch-test")

    //spring actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    //kafka
    implementation 'org.springframework.kafka:spring-kafka'

    //prometheus
    implementation 'io.micrometer:micrometer-registry-prometheus'

}

def querydslDir = "$buildDir/generated/querydsl"
sourceSets {
    main.java.srcDirs += [querydslDir]
}
configurations {
    querydsl.extendsFrom compileClasspath
}


tasks.named('test') {
    useJUnitPlatform()
}
